import { CommitsList } from "components/CommitsList";
import { Header } from "components/Header";
import { Layout } from "components/Layout";
import { GetStaticProps, InferGetStaticPropsType } from "next";
import Head from "next/head";
import { FC } from "react";
import { createOctoClient } from "services/createOctoClient";
import { fetchCommits } from "services/fetchCommits";
import { Commit } from "services/types";

export const getStaticProps: GetStaticProps<{
  commits: Array<Commit>;
}> = async () => {
  const client = createOctoClient();
  const commits = await fetchCommits(client);
  return {
    props: { commits },
    revalidate: 60, // In seconds
  };
};

const Home: FC<InferGetStaticPropsType<typeof getStaticProps>> = ({
  commits,
}) => {
  return (
    <Layout>
      <Head>
        <title>SSR example with API route</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header
        totalCommits={commits.length}
        repositoryLink="https://github.com/Carduelis/urban-octo-engine"
      />
      <CommitsList commits={commits} />
    </Layout>
  );
};

export default Home;
